def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.huawei.agconnect'

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // signingConfigs {
    //     config {
    //        
    //         keyAlias 'xxxx'
    //         keyPassword 'xxxx'
    //         storeFile file('xxxx.jks')
    //         storePassword 'xxxx'
    //     }
    // }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 33
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "skripts.huawei"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        // release {
        //     signingConfig signingConfigs.debug
        //     minifyEnabled false
        //     proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        // }
        // release {
        //     // TODO: Add your own signing config for the release build.
        //     // Signing with the debug keys for now, so `flutter run --release` works.
        //     signingConfig signingConfigs.debug
        // }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // implementation 'com.huawei.agconnect:agcp:1.8.0.300'
    // implementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'
    // implementation 'com.huawei.agconnect:agconnect-remoteconfig:1.5.2.300'
    // implementation 'com.huawei.hms:hianalytics:6.0.0.300'
}

// allprojects {
//     repositories {
//             // Add the Maven address.
//             maven {url 'https://developer.huawei.com/repo/'}
//     }
// }

// buildscript{
//     repositories {
//         // Add the Maven address.
//         maven { url 'https://developer.huawei.com/repo/' }
//     }
//     dependencies {
//         // Add dependencies.
//         classpath 'com.huawei.agconnect:agcp:1.5.2.300'
//     }
// }


// buildscript {

// repositories {
//         google()
// jcenter()
// maven {url 'https://developer.huawei.com/repo/'}
// }

//     dependencies {
//         classpath 'com.android.tools.build:gradle:3.5.0'
// classpath 'com.huawei.agconnect:agcp:1.4.2.301'
//     }
// }

// allprojects {
//     repositories {
//         google()
// jcenter()
// maven {url 'https://developer.huawei.com/repo/'}
// }
// }
